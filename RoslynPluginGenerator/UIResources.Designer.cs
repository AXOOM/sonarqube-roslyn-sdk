//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Roslyn.SonarQube.AnalyzerPlugins {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class UIResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal UIResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Roslyn.SonarQube.AnalyzerPlugins.UIResources", typeof(UIResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created analyzer: {0}.
        /// </summary>
        internal static string AF_CreatedAnalyzer {
            get {
                return ResourceManager.GetString("AF_CreatedAnalyzer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processed assembly. Analyzers located: {0}.
        /// </summary>
        internal static string AF_ProcessedAssembly {
            get {
                return ResourceManager.GetString("AF_ProcessedAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processing assembly: {0}.
        /// </summary>
        internal static string AF_ProcessingAssembly {
            get {
                return ResourceManager.GetString("AF_ProcessingAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception occurred creating analyzer of type &apos;{0}&apos;. Message: {1}.
        /// </summary>
        internal static string AF_WARN_ExceptionCreatingAnalyzer {
            get {
                return ResourceManager.GetString("AF_WARN_ExceptionCreatingAnalyzer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception occurred fetching types. Message: {0}.
        /// </summary>
        internal static string AF_WARN_ExceptionFetchingTypes {
            get {
                return ResourceManager.GetString("AF_WARN_ExceptionFetchingTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception occurred loading assembly {0}. Message: {1}.
        /// </summary>
        internal static string AF_WARN_ExceptionLoadingAssembly {
            get {
                return ResourceManager.GetString("AF_WARN_ExceptionLoadingAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of analyzers located in package: {0}.
        /// </summary>
        internal static string APG_AnalyzersLocated {
            get {
                return ResourceManager.GetString("APG_AnalyzersLocated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generating plugin....
        /// </summary>
        internal static string APG_GeneratingPlugin {
            get {
                return ResourceManager.GetString("APG_GeneratingPlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generating rules....
        /// </summary>
        internal static string APG_GeneratingRules {
            get {
                return ResourceManager.GetString("APG_GeneratingRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Looking for analyzers in the package....
        /// </summary>
        internal static string APG_LocatingAnalyzers {
            get {
                return ResourceManager.GetString("APG_LocatingAnalyzers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No analyzers were found in the specified package.
        /// </summary>
        internal static string APG_NoAnalyzersFound {
            get {
                return ResourceManager.GetString("APG_NoAnalyzersFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugin generated: {0}.
        /// </summary>
        internal static string APG_PluginGenerated {
            get {
                return ResourceManager.GetString("APG_PluginGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} rules generated to {1}.
        /// </summary>
        internal static string APG_RulesGeneratedToFile {
            get {
                return ResourceManager.GetString("APG_RulesGeneratedToFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roslyn Analyzer Plugin Generator for SonarQube.
        /// </summary>
        internal static string AssemblyDescription {
            get {
                return ResourceManager.GetString("AssemblyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expecting one or two arguments:
        ///* NuGet package Id (mandatory), and
        ///* NuGet package version (optional).
        /// </summary>
        internal static string CmdLine_ERROR_InvalidArgumentCount {
            get {
                return ResourceManager.GetString("CmdLine_ERROR_InvalidArgumentCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid NuGet package version: {0}.
        /// </summary>
        internal static string CmdLine_ERROR_InvalidVersion {
            get {
                return ResourceManager.GetString("CmdLine_ERROR_InvalidVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating NuGet repository: {0}.
        /// </summary>
        internal static string NG_CreatingRepository {
            get {
                return ResourceManager.GetString("NG_CreatingRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ... downloaded ({0} files).
        /// </summary>
        internal static string NG_DownloadedPackage {
            get {
                return ResourceManager.GetString("NG_DownloadedPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading package....
        /// </summary>
        internal static string NG_DownloadingPackage {
            get {
                return ResourceManager.GetString("NG_DownloadingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No packages with the specified id were found: {0}.
        /// </summary>
        internal static string NG_ERROR_PackageNotFound {
            get {
                return ResourceManager.GetString("NG_ERROR_PackageNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package version was not found: {0}.
        /// </summary>
        internal static string NG_ERROR_PackageVersionNotFound {
            get {
                return ResourceManager.GetString("NG_ERROR_PackageVersionNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extracting file &apos;{0}&apos; to {1}.
        /// </summary>
        internal static string NG_ExtractingFile {
            get {
                return ResourceManager.GetString("NG_ExtractingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - latest version.
        /// </summary>
        internal static string NG_IsLatestPackageVersionSuffix {
            get {
                return ResourceManager.GetString("NG_IsLatestPackageVersionSuffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to locate package with id &apos;{0}&apos;.
        /// </summary>
        internal static string NG_LocatingPackages {
            get {
                return ResourceManager.GetString("NG_LocatingPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of packages located: {0}.
        /// </summary>
        internal static string NG_NumberOfPackagesLocated {
            get {
                return ResourceManager.GetString("NG_NumberOfPackagesLocated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package versions:.
        /// </summary>
        internal static string NG_PackageVersionListHeader {
            get {
                return ResourceManager.GetString("NG_PackageVersionListHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version was not specified. Using version {0}..
        /// </summary>
        internal static string NG_SelectedPackageVersion {
            get {
                return ResourceManager.GetString("NG_SelectedPackageVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using version marked as latest..
        /// </summary>
        internal static string NG_UsingLatestPackageVersion {
            get {
                return ResourceManager.GetString("NG_UsingLatestPackageVersion", resourceCulture);
            }
        }
    }
}
